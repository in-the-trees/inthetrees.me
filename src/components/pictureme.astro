---
interface Props {
   fallback: string;
   extensions: string[];
   dimensions: {
      width: number;
      height: number;
   };
   caption?: string;
   alt: string;
   lazy?: boolean;
}

const { fallback, extensions, dimensions, caption, alt, lazy } = Astro.props;
const base = fallback.split(".")[0];
---

{
   caption ?
      <figure>
         <picture>
            {extensions.map((extension) => (
               <source
                  srcset={`https://picture-me.inthetrees.me/${base}.${extension}`}
                  type={`image/${extension}`}
               />
            ))}
            <img
               src={`https://picture-me.inthetrees.me/${fallback}`}
               alt={alt}
               width={`${dimensions.width}`}
               height={`${dimensions.height}`}
               loading={lazy ? "lazy" : "eager"}
            />
         </picture>

         <figcaption>{caption}</figcaption>
      </figure>
   :  <picture>
         {extensions.map((extension) => (
            <source
               srcset={`https://picture-me.inthetrees.me/${base}.${extension}`}
               type={`image/${extension}`}
            />
         ))}
         <img
            src={`https://picture-me.inthetrees.me/${fallback}`}
            alt={alt}
            width={`${dimensions.width}`}
            height={`${dimensions.height}`}
            loading={lazy ? "lazy" : "eager"}
         />
      </picture>
}
