---
import { getCollection } from "astro:content";
import Layout from "~layouts/base.astro";
import { SEO } from "astro-seo";
import BackLink from "~components/back-link";
import "~styles/text.css";
import "~styles/blog.css";

export async function getStaticPaths() {
   const blog = await getCollection("blog", ({ data }) => {
      return import.meta.env.PROD ? data.draft !== true : true;
   });

   return blog.map((entry) => ({
      params: { slug: entry.slug },
      props: { entry },
   }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout>
   {entry.data.image ? (
      <SEO
         slot="seo"
         title={entry.data.title}
         description={entry.data.description}
         extend={{
            meta: [
               { name: "og:title", content: entry.data.title },
               { name: "og:description", content: entry.data.description },
               { name: "og:image", content: entry.data.image },
               { name: "og:type", content: "article" },
               { name: "og:article:published_time", content: entry.data.datePublished.toISOString() },
               {name: "og:article:author", content: "Jade van Dorsten"},
               {name: "og:article:author", content: "inthetrees"},
            ]
         }}   
      />
   ) : (
   <SEO
         slot="seo"
         title={entry.data.title}
         description={entry.data.description}
         extend={{
            meta: [
               { name: "og:title", content: entry.data.title },
               { name: "og:description", content: entry.data.description },
               { name: "og:type", content: "article" },
               { name: "og:article:published_time", content: entry.data.datePublished.toISOString() },
               {name: "og:article:author", content: "Jade van Dorsten"},
               {name: "og:article:author", content: "inthetrees"},
            ]
         }}   
      />
   )}

   <header slot="header" class="leading-none">
      <BackLink href="/blog" text="blog" client:load />
   </header>

   <article>
      <div id="blog-metadata" class="pb-0.5 flex flex-col gap-1">
         <h1>{entry.data.title}</h1>
         <span class="font-serif italic text-black/[.72]"
            >Published<time>
               {
                  new Date(entry.data.datePublished).toLocaleString("en-US", {
                     year: "numeric",
                     month: "long",
                     day: "numeric",
                  })
               }
            </time></span
         >
      </div>
      <Content />
   </article>
</Layout>
