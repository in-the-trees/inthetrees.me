---
export const prerender = false;

import { SEO } from "astro-seo";
import Layout from "~layouts/base.astro";
import BackLink from "~components/back-link";
import "~styles/text.css";

import type { Microblog } from "~libs/microblog";
import { getPosts } from "~libs/microblog";
import Feed from "~components/microblog/feed.astro";
import FeedSkeleton from "~components/microblog/feed-skeleton";

let posts: Microblog[] = [];
let error: Error | undefined = undefined;
try {
   posts = await getPosts(
      `https://${import.meta.env.MICROBLOG_BASE_URL}/api/all.json`,
   );
} catch (e) {
   error = e as Error;
   console.error(error);
}
---

<Layout>
   <SEO
      slot="seo"
      title="My microblog's archive"
      description="I find ephemerality to be ideal for microblog content, and thus, the archive."
      noindex={true}
   />
   <header slot="header" class="leading-none">
      <BackLink href="/microblog" text="microblog" client:load/>
   </header>
   <div class="flex flex-col gap-7">
      <div>
         <h1 class="font-serif text-xl font-[354]">My microblog's archive</h1>
         <p class="my-2">
            I find ephemerality ideal for the microblog format, and so, after a
            day, posts get archived here.
         </p>
      </div>
      <Feed {posts} {error} server:defer>
         <div slot="fallback">
            <FeedSkeleton postCount={27} />
         </div>
      </Feed>
   </div>
</Layout>
