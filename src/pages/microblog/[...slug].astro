---
export const prerender = false;

import Layout from "~layouts/base.astro";
import "~styles/text.css";
import IHeader from "~components/iheader.astro";

import { getPost, type Microblog } from "~libs/microblog";
import MicroblogPost from "~components/microblog/post.astro";

const { slug } = Astro.params;
const slugArray = slug && slug.length > 0 ? slug.split("/").filter(Boolean) : [];

let post: Microblog = {} as Microblog;

// check if slug length is valid
if (slugArray.length !== 4 && slugArray.length !== 1) {
   return new Response(null, { status: 404 });
}

if (slugArray.length === 1) {
   const postId = slugArray[0];

   // check if slug is a valid post id
   if (!/^\d{7}$/.test(postId)) return new Response(null, { status: 404 });

   try {
      post = await getPost(postId);
   } catch {
      return new Response(null, { status: 404 });
   }
}

if (slugArray.length === 4) {
   const [year, month, day, postId] = slugArray;

   // check if slug ends with a valid post id
   if (!/^\d{7}$/.test(postId)) return new Response(null, { status: 404 });

   // check if date is valid
   if (!/^\d{4}$/.test(year)) return new Response(null, { status: 404 });
   if (!/^(1[0-2]|[1-9])$/.test(month))
      return new Response(null, { status: 404 });
   if (!/^(3[01]|[12]\d|[1-9])$/.test(day))
      return new Response(null, { status: 404 });

   try {
      post = await getPost(postId, { year, month, day });
   } catch {
      return new Response(null, { status: 404 });
   }
}
---

<Layout>
   <IHeader
      slot="hnav"
      title={{
         text: "inthetrees",
         italic: true,
         element: "span",
      }}
      links={[
         { href: "/microblog", text: "microblog" },
         { href: "/blog", text: "blog" },
         { href: "/pages", text: "pages" },
      ]}
   />
   <MicroblogPost post={post} />
</Layout>
