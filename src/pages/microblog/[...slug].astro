---
export const prerender = false;

import Layout from "~layouts/base.astro";
import "~styles/text.css";
import "~styles/reply.css";
import Back from "~components/back.astro";

import {
   getMicrodotblog,
   getPost,
   type Microblog,
   type Microdotblog,
} from "~libs/microblog";
import MicroblogPost from "~components/microblog/post.astro";
import { ReplyArea } from "~components/microblog/reply-area";

const { slug } = Astro.params;
const slugArray = slug && slug.length > 0 ? slug.split("/").filter(Boolean) : [];

let post: Microblog = {} as Microblog;

// check if slug length is valid
if (slugArray.length !== 4 && slugArray.length !== 1) {
   return new Response(null, { status: 404 });
}

if (slugArray.length === 1) {
   const postId = slugArray[0];

   // check if slug is a valid post id
   if (!/^\d{7}$/.test(postId)) return new Response(null, { status: 404 });

   try {
      post = await getPost(postId);
   } catch {
      return new Response(null, { status: 404 });
   }
}

if (slugArray.length === 4) {
   const [year, month, day, postId] = slugArray;

   // check if slug ends with a valid post id
   if (!/^\d{7}$/.test(postId)) return new Response(null, { status: 404 });

   // check if date is valid
   if (!/^\d{4}$/.test(year)) return new Response(null, { status: 404 });
   if (!/^(1[0-2]|[1-9])$/.test(month))
      return new Response(null, { status: 404 });
   if (!/^(3[01]|[12]\d|[1-9])$/.test(day))
      return new Response(null, { status: 404 });

   try {
      post = await getPost(postId, { year, month, day });
   } catch {
      return new Response(null, { status: 404 });
   }
}

const microdotblog: Microdotblog = await getMicrodotblog(post.url);
const [mdbId] =
   microdotblog.home_page_url ?
      microdotblog.home_page_url.match(/(\d+)$/) || []
   :  [];
---

<Layout>
   <header slot="header" class="leading-none">
      <Back href="/microblog" text="microblog" />
   </header>

   <MicroblogPost post={post} />

   <section id="reply-area" class="pt-4">
      <div class="border-t py-7 border-black/[.054]">
         <ReplyArea
            postUrl={post.url}
            initialMicrodotblog={microdotblog}
            client:load
         />
      </div>
   </section>

   <div
      id="reply-buttons"
      class="font-serif pt-7 text-xs italic text-black/[.54] text-right"
   >
      reply with <a
         href=`https://micro.blog/account/comments/${mdbId}/mb?url=${post.url}`
         >micro.blog</a
      >, <a
         href=`https://micro.blog/account/comments/${mdbId}/bluesky?url=${post.url}`
         >bluesky</a
      >, or <a
         href=`https://micro.blog/account/comments/${mdbId}/mastodon?url=${post.url}`
         >mastodon</a
      >
   </div>
</Layout>
